Now:
====
- make pdmt build from full git clean.
	(add prebuild or something)

- use pdmt in linuxapi and see how it goes.

- use pdmt in fastlog and see how it goes.

- in the index.php.mako file use better variables (for the name of the apt site for instance).
- change the name of the apt machine to apt.veltzer.net
	and make sure I can access it.
- remove the makot folder and see pdmt crash.
	fix it
- get to pdmt.pl --showgraph that shows the pdmt graph visually.

- add scanners that know about dependencies between nodes.
	handle errors in scanners.
- create the deb package as part of pdmt (with dependencies)
- define installation of the package as depending on the deb package.

- get ridd of setup.py (it should a part of the module that knows how to create
	the deb package).
- add the code from myrepo to create a repository.
- add hooks to pdmt to enable commands with no relation to the graph.
	hook the commands in reprepro to them.
- get ridd of the makefile by adding:
	pdmt clean hooks.
		- one hook to remove all files of a certain extension.
		- one hook to remove a set of folders recursivly.
- add mako suppport in pdmt and create a website for it.

- make the reprepro script a pdmt plugin.

- the todo list is not very effective.
	it is asked using the "in" operator alot and it is a list - better make it an ordered set.
		(it does have order).
	actually - the todo list should be a tree since it does have dependencies and the tree structure
	could be used for parallelism.
		(find an algorithm for that).
- what happens if I touch an object file. that is very weird. think about it.
- create a site using mako for templating.
	(make install to install the site).
- bring a python documentation tool and create documentation out of the source code.
	install that documentation onto the site.
