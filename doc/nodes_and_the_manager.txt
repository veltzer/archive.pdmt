The idea is that the nodes will be able to easily access the manager.
It does not seem to hinder anything as I don't forsee a situation where a single node will be in more than one manager.
Actually even the fact that the manager is not a singleton is an overkill because I can
hardly forsee a situation where there is more than one manager.
So each node should have access to the manager it is a part of.

How will that work?
Each node will have an .mgr property.

How will it be set? static methods of pdmt namespace.

get the current manager (in the constructor of nodes, right at the begining)
	get_manager()
if you want more than one manager:
	set_manager()
when you create a manager (sets it as a default manager)
	new_manager()

every instantiation of a manager will set the default manager.

Another idea is for each node NOT to have a link to the manager but
rather call get_manager(). But then how would we have more than one
manager? Using a manager policy which says how {get/set/new}_manager
works. You can create your own policy and say, store an instance of a
manager in TLS for everythread etc.
